imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    item_valid_days: 30
    item_match_margin: 3
    item_match_limit: 5
    item_featured_limit: 3

framework:
    #esi:             ~
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'bootstrap_3_layout.html.twig'
    globals:
        unseen_count: '@unseen_count'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            numeric_functions:
                Rand: AppBundle\DQL\RandFunction
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

stof_doctrine_extensions:
    orm:
        default:
            softdeleteable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false

hautelook_alice:
    fixtures_path: 'Resources/fixtures'

vich_uploader:
    db_driver: orm
    mappings:
        item_image:
            uri_prefix:         /images/items
            upload_destination: '%kernel.root_dir%/../web/images/items'
            namer:              vich_uploader.namer_uniqid

easy_admin:
    site_name: '<img src="/images/logo.png" alt="Dinder">'
    design:
        brand_color: '#161616'
        assets:
            favicon: '/images/favicon.ico'
        menu:
            - { route: 'homepage', label: 'Homepage', icon: 'home' }
            - { entity: 'User', label: 'Users', icon: 'user' }
            - { entity: 'Location', label: 'Locations', icon: 'map-marker' }
            - { entity: 'Category', label: 'Categories', icon: 'tag' }
            - { entity: 'Item', label: 'Items', icon: 'shopping-cart' }
            - { entity: 'Match', label: 'Matches', icon: 'exchange' }
    entities:
        User:
            class: AppBundle\Entity\User
            list:
                title: 'Users'
                actions: ['show']
                fields:
                    - id
                    - username
                    - name
                    - phone
                    - location
                    - lastLogin
                    - deletedAt
                    - enabled
            form:
                fields:
                    - {property: 'name', type: 'text', type_options: { required: true } }
                    - username
                    - email
                    - {property: 'phone', type: 'text', type_options: { required: true } }
                    - {property: 'location', type_options: { required: true } }
                    - enabled
                    - lastLogin
                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - deletedAt
            new:
                fields:
                    - { property: 'plainPassword', label: 'Password', type: 'password', type_options: { required: true} }
            show:
                fields:
                    - id
                    - username
                    - name
                    - phone
                    - location
                    - lastLogin
                    - deletedAt
                    - enabled
                    - items
        Location:
            class: AppBundle\Entity\Location
            list:
                title: 'Locations'
                fields:
                    - id
                    - title
                    - deletedAt
            form:
                fields:
                    - title
                    - deletedAt
            show:
                fields:
                    - id
                    - title
                    - deletedAt
        Category:
            class: AppBundle\Entity\Category
            list:
                title: 'Categories'
                fields:
                    - id
                    - title
                    - deletedAt
            show:
                fields:
                    - id
                    - title
                    - deletedAt
            form:
                fields:
                    - title
                    - deletedAt
        Item:
            class: AppBundle\Entity\Item
            list:
                title: 'Items'
                actions: ['show']
                fields:
                    - id
                    - title
                    - user
                    - category
                    - { property: 'value', format: '%.2f €'}
                    - status
                    - created
                    - deletedAt
            form:
                fields:
                    - title
                    - description
                    - { property: 'user', type_options: { required: true } }
                    - { property: 'category', type_options: { required: true } }
                    - { property: 'categoriesToMatch', type_options: { required: true } }
                    - { property: 'value', type: 'money' }
                    - status
                    - created
                    - expires
                    - deletedAt
            show:
                fields:
                    - id
                    - { property: 'imageName', label: 'Image', type: 'image', base_path: '/images/items' }
                    - title
                    - description
                    - user
                    - category
                    - categoriesToMatch
                    - { property: 'value', format: '%.2f €'}
                    - status
                    - approvals
                    - rejections
                    - created
                    - expires
                    - deletedAt
        Match:
            class: AppBundle\Entity\Match
            list:
                title: 'Matches'
